#list of analysis levels in the bids app
analysis_levels:
 - participant


# mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - 'all'  # if '', then the first rule is run

# Configure components:
# Each entry creates a new component that can be retrieved within the workflow
# via `generate_inputs`.
# Filters are used to select paths: each filter has an `entity` key and a
# single value or list of values to select.
# Wildcards are used to mark variable parts of paths. Each wildcard is an
# entity, such as `subject` or `session`, that may vary across component paths.
pybids_inputs:
  t1w:
    filters:
      suffix: "T1w"
      extension: ".nii.gz"
    wildcards:
      - subject
      - session
      - acquisition
      - run
  bold:
    filters:
      suffix: bold
    wildcards:
      - subject
      - run

# configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:

# Docker and singularity containers may be defined here
containers:
    # fsl: 'docker://brainlife/fsl/6.0.0'

# Configuration for hippunfold
singularity_containers:
  hippunfold: "/data/mica1/01_programs/singularity/hippunfold_v1.4.1.sif"
  fastsurfer: "/data/mica1/01_programs/fastsurfer/fastsurfer-cpu-v2.4.2.sif"

hippunfold_cache_dir: "/host/yeatman/local_raid/rcruces/cache/hippunfold"
snakemake_output_cache: "/host/yeatman/local_raid/rcruces/cache/snakemake"
hippunfold_output_subdir: "hippunfold_v1.4.1"

freesurfer_license: "/data_/mica1/01_programs/freesurfer-7.3.2/license.txt"
tmp_dir: "/host/yeatman/local_raid/rcruces/tmp/tmpfiles"
fastsurfer_output_subdir: "fastsurfer"
threads: 15
use_session: true  # Set to false if not using sessions
